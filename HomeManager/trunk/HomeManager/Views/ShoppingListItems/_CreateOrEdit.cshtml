@model HomeManager.Models.ShoppingListItem

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.Amount)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Amount)
    @Html.ValidationMessageFor(model => model.Amount)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Unit)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Unit)
    @Html.ValidationMessageFor(model => model.Unit)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Rank)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Rank)
    @Html.ValidationMessageFor(model => model.Rank)
</div>

<div class="editor-label">
    ShoppingList
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.ShoppingListId, ((IEnumerable<HomeManager.Models.ShoppingList>)ViewBag.PossibleShoppingLists).Select(option => new SelectListItem {
        Text = Html.DisplayTextFor(_ => option).ToString(), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.ShoppingListId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.ShoppingListId)
</div>
<div class="editor-label">
    Item
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.ItemId, ((IEnumerable<HomeManager.Models.Item>)ViewBag.PossibleItems).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Name), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.ItemId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.ItemId)
</div>
